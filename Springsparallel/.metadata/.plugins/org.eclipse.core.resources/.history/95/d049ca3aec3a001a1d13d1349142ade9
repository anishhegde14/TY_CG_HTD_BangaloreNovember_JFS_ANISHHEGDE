package com.parallel.forestrymanagement.dao;

import javax.persistence.EntityManager;

import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;
import javax.persistence.Query;

import org.springframework.stereotype.Repository;

import com.parallel.forestrymanagement.dto.LoginDetailsBean;
@Repository
public class LoginDaoImpl implements LoginDao{
	
	
	
	@PersistenceUnit
	private EntityManagerFactory entityManagerFactory;

	
	
	@Override
	public boolean addLoginCredentials(LoginDetailsBean bean) {
		EntityTransaction transactiont=null;
		try {
			EntityManager entityManager=entityManagerFactory.createEntityManager();
			transactiont=entityManager.getTransaction();
			transactiont.begin();
			entityManager.persist(bean);
			transactiont.commit();
			entityManager.close();
			return true;
		}catch (Exception e) {
			e.printStackTrace();
			transactiont.rollback();
			return false;
		}
	}

	@Override
	public boolean deleteLoginCredentials(int id) {
		try{
			EntityManager emManager=entityManagerFactory.createEntityManager();
			EntityTransaction etTransaction=emManager.getTransaction();
			etTransaction.begin();
			String jpql="Delete from LoginDetailsBean where id=:id ";
			Query query=emManager.createQuery(jpql);
			query.setParameter("id",(long) id);
			int result=query.executeUpdate();
			etTransaction.commit();
			emManager.close();
			if(result>0) {
				return true;
			}else {
				return false;
			}
		}catch (Exception e) {
			return false;
		}
	
	}

	@Override
	public LoginDetailsBean findLogin(int id) {

		
		try{
			EntityManager eManager=entityManagerFactory.createEntityManager();
			LoginDetailsBean loginBean=eManager.find(LoginDetailsBean.class, id);
			eManager.close();
			return loginBean;
			}catch (Exception e) {
				e.printStackTrace();
			return null;
			}

		
	}

	@Override
	public LoginDetailsBean findCredentials(String email) {
		try{
			String jpql="from LoginDetailsBean where email=:email";
			EntityManager eManager=entityManagerFactory.createEntityManager();
			Query query=eManager.createQuery(jpql);
			query.setParameter("email", email);
			LoginDetailsBean loginBean=(LoginDetailsBean) query.getSingleResult()
			System.out.println(loginBean);
			eManager.close();
			return loginBean;
			}catch (Exception e) {
			e.printStackTrace();
				return null;
			}
	
	}
	

}
